pipeline {
    agent any

    environment {
        REPO_URL = 'git@github.com:matrix-mayhem/ci.git'
        BRANCH = 'master'
        PROJECT_SUBDIR = 'adas_project'
        BAZEL_BUILD_TARGET = '//:perception_main'
        BUILD_DIR = 'build'
        BINARY_NAME = 'perception_main'
        GTEST_BINARY = 'test_perception'
    }

    stages {

        stage('Checkout Code') {
            steps {
                git branch: "${BRANCH}", url: "${REPO_URL}"
            }
        }

        stage('Build Projects') {
            parallel {
                stage('CMake Build') {
                    steps {
                        dir("${PROJECT_SUBDIR}") {
                            sh '''
                                rm -rf ${BUILD_DIR}
                                mkdir -p ${BUILD_DIR}
                                cd ${BUILD_DIR}
                                cmake ..
                                make
                            '''
                        }
                    }
                }

                stage('Bazel Build') {
                    steps {
                        dir("${PROJECT_SUBDIR}") {
                            sh '''
                                bazel clean
                                bazel build ${BAZEL_BUILD_TARGET}
                            '''
                        }
                    }
                }
            }
        }

        stage('Run Unit Tests') {
            steps {
                dir("${PROJECT_SUBDIR}") {
                    sh '''
                        cd ${BUILD_DIR}
                        ctest --output-on-failure || ./${GTEST_BINARY}
                    '''
                }
            }
        }

        stage('Static Code Analysis') {
            steps {
                dir("${PROJECT_SUBDIR}") {
                    sh '''
                        cppcheck --enable=all --inconclusive --std=c++17 --force \
                          --suppress=missingIncludeSystem \
                          include/ src/ tests/ \
                          2> cppcheck_report.txt || true
                    '''
                }
            }
        }

        stage('Deploy to Target via Ansible') {
            steps {
                dir("${PROJECT_SUBDIR}/ansible") {
                    sh '''
                        echo "Current directory: $(pwd)"
                        ls -l
                        ansible-playbook -i inventory deploy.yml
                    '''
                }
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: "${PROJECT_SUBDIR}/cppcheck_report.txt", allowEmptyArchive: true
        }

        failure {
            mail to: 'soorajlapasi@gmail.com',
                 subject: "Build Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                 body: "Check Jenkins for details: ${env.BUILD_URL}"
        }
    }
}
